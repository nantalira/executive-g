{
    "openapi": "3.0.0",
    "info": {
        "title": "Exclusive G E-commerce API Specification",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api/",
            "description": "Development server"
        },
        {
            "url": "https://exclusive-api.nantalira.site/api/",
            "description": "Production server"
        }
    ],
    "paths": {
        "/health": {
            "get": {
                "summary": "Health check endpoint",
                "tags": ["Unauthenticated", "System"],
                "responses": {
                    "200": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessWithDataResponse"
                                },
                                "example": {
                                    "message": "API is running",
                                    "data": {
                                        "status": "ok",
                                        "timestamp": "2025-10-20T10:30:00.000000Z",
                                        "version": "1.0.0",
                                        "environment": "local",
                                        "laravel_version": "10.x"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/refresh": {
            "post": {
                "summary": "Refresh JWT token",
                "tags": ["Unauthenticated", "Auth"],
                "security": [],
                "responses": {
                    "200": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessMessageResponse"
                                },
                                "example": {
                                    "message": "Token refreshed successfully"
                                }
                            }
                        },
                        "headers": {
                            "Set-Cookie": {
                                "description": "New JWT token set in cookie",
                                "schema": {
                                    "type": "string",
                                    "example": "tokenjwt=new_jwt_token_here; HttpOnly; Secure; SameSite=Strict"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or expired token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": [
                                            "Token is invalid or expired"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Internal server error"]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "summary": "Register a new user",
                "tags": ["Unauthenticated", "Auth"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "jhondoe@email.com",
                                        "format": "email",
                                        "uniqueItems": true
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password",
                                        "minLength": 6
                                    },
                                    "confirm_password": {
                                        "type": "string",
                                        "example": "password",
                                        "minLength": 6
                                    }
                                },
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "confirm_password",
                                    "phone_number"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessMessageResponse"
                                },
                                "example": {
                                    "message": "User registered successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Field error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "name": ["Name is required"],
                                        "email": [
                                            "Email is required",
                                            "Email is invalid"
                                        ],
                                        "password": [
                                            "Password is required",
                                            "Password must be at least 6 characters"
                                        ],
                                        "confirm_password": [
                                            "Confirm password is required",
                                            "Password does not match"
                                        ],
                                        "phone_number": [
                                            "Phone number is required"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Internal server error"]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "summary": "Login user",
                "tags": ["Unauthenticated", "Auth"],
                "security": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "jhondoe@email.com",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password",
                                        "minLength": 6
                                    }
                                },
                                "required": ["email", "password"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessMessageResponse"
                                },
                                "example": {
                                    "message": "User logged in successfully"
                                }
                            }
                        },
                        "headers": {
                            "Set-Cookie": {
                                "description": "JWT token set in cookie",
                                "schema": {
                                    "type": "string",
                                    "example": "tokenjwt=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/FieldErrorResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ApiErrorResponse"
                                        }
                                    ]
                                },
                                "examples": {
                                    "FieldErrorResponse": {
                                        "value": {
                                            "errors": {
                                                "email": [
                                                    "Email is required",
                                                    "Email is invalid"
                                                ],
                                                "password": [
                                                    "Password is required",
                                                    "Password must be at least 6 characters"
                                                ]
                                            }
                                        }
                                    },
                                    "ApiErrorResponse": {
                                        "value": {
                                            "errors": {
                                                "message": [
                                                    "Invalid email or password"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Internal server error"]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/send-otp/{phone_number}": {
            "get": {
                "summary": "Send OTP to phone number",
                "tags": ["Ragu"],
                "parameters": [
                    {
                        "name": "phone_number",
                        "in": "path",
                        "required": true,
                        "description": "Phone number",
                        "schema": {
                            "type": "string",
                            "example": "1234567890"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessWithDataResponse"
                                },
                                "example": {
                                    "message": "OTP sent successfully",
                                    "data": {
                                        "otp": "123456"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Field error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "phone_number": [
                                            "Phone number is required"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Internal server error"]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/otp-verification/{user_id}": {
            "post": {
                "summary": "Verify OTP",
                "tags": ["Ragu"],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "description": "User ID",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "required": ["otp"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessMessageResponse"
                                },
                                "example": {
                                    "message": "Phone number verified successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Field error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "phone_number": [
                                            "Phone number is required"
                                        ],
                                        "otp": ["OTP is required"]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Internal server error"]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "summary": "Logout user",
                "tags": ["Authenticated", "Auth"],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessMessageResponse"
                                },
                                "example": {
                                    "message": "User logged out successfully"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Internal server error"]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/forgot-password/{phone_number}": {
            "post": {
                "summary": "Forgot password",
                "tags": ["Ragu"],
                "parameters": [
                    {
                        "name": "phone_number",
                        "in": "path",
                        "required": true,
                        "description": "Phone number",
                        "schema": {
                            "type": "string",
                            "example": "1234567890"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password",
                                        "minLength": 6
                                    },
                                    "confirm_password": {
                                        "type": "string",
                                        "example": "password",
                                        "minLength": 6
                                    }
                                },
                                "required": [
                                    "otp",
                                    "password",
                                    "confirm_password"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessMessageResponse"
                                },
                                "example": {
                                    "message": "Password reset successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Field error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "phone_number": [
                                            "Phone number is required"
                                        ],
                                        "otp": ["OTP is required"],
                                        "password": [
                                            "Password is required",
                                            "Password must be at least 6 characters"
                                        ],
                                        "confirm_password": [
                                            "Confirm password is required",
                                            "Password does not match"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Internal server error"]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/change-password": {
            "post": {
                "summary": "Change password",
                "tags": ["Authenticated", "Profile", "Auth"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "current_password": {
                                        "type": "string",
                                        "example": "password",
                                        "minLength": 6
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "example": "newpassword",
                                        "minLength": 6
                                    }
                                },
                                "required": ["current_password", "new_password"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessMessageResponse"
                                },
                                "example": {
                                    "message": "Password changed successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Field error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "current_password": [
                                            "Current password is required",
                                            "Current password is incorrect"
                                        ],
                                        "new_password": [
                                            "New password is required",
                                            "New password must be at least 6 characters"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Internal server error"]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/carousels": {
            "get": {
                "summary": "Get all carousel images",
                "tags": ["Unauthenticated", "HomePage"],
                "parameters": [
                    {
                        "name": "new_arrival",
                        "in": "query",
                        "required": false,
                        "description": "New arrival (default false)",
                        "schema": {
                            "type": "boolean",
                            "example": false
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number (default 1)",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "items_per_page",
                        "in": "query",
                        "required": false,
                        "description": "Items per page (default 15)",
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessWithPaginationResponse"
                                },
                                "example": {
                                    "message": "Carousel images fetched successfully",
                                    "data": [
                                        {
                                            "id": 1,
                                            "image": "https://example.com/image1.jpg",
                                            "product_id": 1,
                                            "title": "Carousel Image 1",
                                            "description": "Description for carousel image 1"
                                        },
                                        {
                                            "id": 2,
                                            "image": "https://example.com/image2.jpg",
                                            "product_id": 2,
                                            "title": "Carousel Image 1",
                                            "description": "Description for carousel image 1"
                                        },
                                        {
                                            "id": 3,
                                            "image": "https://example.com/image3.jpg",
                                            "product_id": 3,
                                            "title": "Carousel Image 1",
                                            "description": "Description for carousel image 1"
                                        }
                                    ],
                                    "pagination": {
                                        "current_page": 1,
                                        "total_pages": 1,
                                        "total_items": 3,
                                        "items_per_page": 15
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Internal server error"]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/products": {
            "get": {
                "summary": "Get all products with filters",
                "tags": ["Unauthenticated", "HomePage", "Product Details"],
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "query",
                        "required": false,
                        "description": "Category ID (default null)",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number (default 1)",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "items_per_page",
                        "in": "query",
                        "required": false,
                        "description": "Items per page (default 15)",
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "description": "Search by product name (default null)",
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "description": "Filter products by: best_selling (sorts by total_sold desc), new_arrival (sorts by created_at desc), price_asc, price_desc, flash_sale (default null)",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "best_selling",
                                "new_arrival",
                                "price_asc",
                                "price_desc",
                                "flash_sale"
                            ],
                            "example": "best_selling"
                        }
                    },
                    {
                        "name": "flash_sale_id",
                        "in": "query",
                        "required": false,
                        "description": "Flash sale ID (used with filter=flash_sale to get products from specific flash sale)",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessWithPaginationResponse"
                                },
                                "example": {
                                    "message": "Products retrieved successfully",
                                    "data": [
                                        {
                                            "id": 1,
                                            "name": "Gaming Laptop",
                                            "price": "15000000",
                                            "discount": "0.10",
                                            "product_images": [
                                                {
                                                    "product_id": 1,
                                                    "name": "https://example.com/storage/products/laptop1.jpg"
                                                }
                                            ],
                                            "avg_rating": 4.5,
                                            "total_rating": 120
                                        },
                                        {
                                            "id": 2,
                                            "name": "Smartphone",
                                            "price": "8000000",
                                            "discount": "0.05",
                                            "product_images": [
                                                {
                                                    "product_id": 2,
                                                    "name": "https://example.com/storage/products/phone1.jpg"
                                                }
                                            ],
                                            "avg_rating": 4.2,
                                            "total_rating": 85
                                        }
                                    ],
                                    "pagination": {
                                        "current_page": 1,
                                        "total_pages": 1,
                                        "total_items": 2,
                                        "items_per_page": 15
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/products/{product_id}": {
            "get": {
                "summary": "Get product details",
                "tags": ["Unauthenticated", "Product Details"],
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "path",
                        "required": true,
                        "description": "Product ID",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessWithDataResponse"
                                },
                                "example": {
                                    "message": "Product details retrieved successfully",
                                    "data": {
                                        "id": 1,
                                        "name": "Product 1",
                                        "price": 100,
                                        "discount": 0.1,
                                        "avg_rating": 4.5,
                                        "total_rating": 100,
                                        "stock": 100,
                                        "description": "Product description",
                                        "sale_id": 1,
                                        "variant_id": 1,
                                        "category_id": 1,
                                        "product_images": [
                                            {
                                                "product_id": 1,
                                                "name": "https://example.com/image1.jpg",
                                                "pinned": 1
                                            },
                                            {
                                                "product_id": 1,
                                                "name": "https://example.com/image2.jpg",
                                                "pinned": 0
                                            },
                                            {
                                                "product_id": 1,
                                                "name": "https://example.com/image3.jpg",
                                                "pinned": 0
                                            }
                                        ],
                                        "sale": {
                                            "id": 1,
                                            "sale_discount": "20.00",
                                            "start_date": "2025-10-20T01:06:21.000000Z",
                                            "end_date": "2025-10-21T04:35:31.000000Z"
                                        },
                                        "category": {
                                            "id": 1,
                                            "name": "Category 1"
                                        },
                                        "variants": [
                                            {
                                                "id": 1,
                                                "name": "Variant 1",
                                                "variant_options": [
                                                    {
                                                        "variant_id": 1,
                                                        "name": "Option 1"
                                                    },
                                                    {
                                                        "variant_id": 1,
                                                        "name": "Option 2"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Field error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "product_id": ["Product ID is required"]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Product not found"]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Internal server error"]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/flash-sales/schedule": {
            "get": {
                "summary": "Get flash sales schedule (active and upcoming)",
                "tags": ["Unauthenticated", "Flash Sale"],
                "responses": {
                    "200": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessWithDataResponse"
                                },
                                "example": {
                                    "message": "Flash sales schedule retrieved successfully",
                                    "data": {
                                        "server_time": "2025-10-20T10:30:00.000000Z",
                                        "active": [
                                            {
                                                "id": 1,
                                                "start_date": "2025-10-20 08:00:00",
                                                "end_date": "2025-10-20 20:00:00",
                                                "sale_discount": 0.25,
                                                "status": "active",
                                                "time_remaining_seconds": 34200,
                                                "display_time": "8:00 AM - 8:00 PM"
                                            }
                                        ],
                                        "upcoming": [
                                            {
                                                "id": 2,
                                                "start_date": "2025-10-21 08:00:00",
                                                "end_date": "2025-10-21 20:00:00",
                                                "sale_discount": 0.3,
                                                "status": "upcoming",
                                                "starts_in_seconds": 77400,
                                                "display_time": "8:00 AM - 8:00 PM"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/flash-sales/product": {
            "get": {
                "summary": "Get active flash sale with products",
                "tags": ["Unauthenticated", "Flash Sale", "HomePage"],
                "parameters": [
                    {
                        "name": "items_per_page",
                        "in": "query",
                        "required": false,
                        "description": "Number of products per page",
                        "schema": {
                            "type": "integer",
                            "example": 15,
                            "default": 15
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "description": "Search products by name",
                        "schema": {
                            "type": "string",
                            "example": "laptop"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessWithDataResponse"
                                },
                                "example": {
                                    "message": "Active flash sale with products retrieved successfully",
                                    "data": {
                                        "flash_sale": {
                                            "id": 1,
                                            "start_date": "2025-10-20 08:00:00",
                                            "end_date": "2025-10-20 20:00:00",
                                            "sale_discount": 0.25
                                        },
                                        "products": {
                                            "data": [
                                                {
                                                    "id": 1,
                                                    "name": "Gaming Laptop",
                                                    "price": "15000000",
                                                    "discount": "0.10",
                                                    "avg_rating": 4.5,
                                                    "total_rating": 120,
                                                    "product_images": [
                                                        {
                                                            "product_id": 1,
                                                            "name": "https://example.com/storage/products/laptop1.jpg"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "pagination": {
                                                "current_page": 1,
                                                "total_pages": 3,
                                                "total_items": 45,
                                                "items_per_page": 15
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reviews/{product_id}": {
            "get": {
                "summary": "Get all reviews of a product",
                "tags": ["Unauthenticated", "Product Details"],
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "path",
                        "required": true,
                        "description": "Product ID",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "items_per_page",
                        "in": "query",
                        "required": false,
                        "description": "Number of reviews per page (default 15)",
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessWithPaginationResponse"
                                },
                                "example": {
                                    "message": "Reviews fetched successfully",
                                    "data": [
                                        {
                                            "id": 1,
                                            "product_id": 1,
                                            "user_id": 1,
                                            "rating": 4,
                                            "comment": "Great product! Highly recommended.",
                                            "image": null,
                                            "created_at": "2025-09-26T03:52:41.000000Z",
                                            "user": {
                                                "id": 1,
                                                "name": "John Doe"
                                            }
                                        },
                                        {
                                            "id": 2,
                                            "product_id": 1,
                                            "user_id": 2,
                                            "rating": 5,
                                            "comment": "Excellent quality and fast delivery.",
                                            "image": "https://example.com/review-image.jpg",
                                            "created_at": "2025-09-24T15:44:09.000000Z",
                                            "user": {
                                                "id": 2,
                                                "name": "Jane Smith"
                                            }
                                        },
                                        {
                                            "id": 3,
                                            "product_id": 1,
                                            "user_id": 3,
                                            "rating": 3,
                                            "comment": "Average product, met basic expectations.",
                                            "image": null,
                                            "created_at": "2025-08-25T13:20:43.000000Z",
                                            "user": {
                                                "id": 3,
                                                "name": "Bob Johnson"
                                            }
                                        }
                                    ],
                                    "pagination": {
                                        "current_page": 1,
                                        "total_pages": 1,
                                        "total_items": 13,
                                        "items_per_page": 15
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Field error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "product_id": ["Product ID is required"]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Reviews not found"]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Internal server error"]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reviews": {
            "post": {
                "summary": "Add review to a product",
                "tags": ["Authenticated", "Orders"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "product_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "rating": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 5,
                                        "example": 4
                                    },
                                    "comment": {
                                        "type": "string",
                                        "example": "Great product! Highly recommended."
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": "Review image file (optional)",
                                        "nullable": true
                                    }
                                },
                                "required": ["product_id", "rating", "comment"]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessMessageResponse"
                                },
                                "example": {
                                    "message": "Review added successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Field error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "product_id": [
                                            "Product ID is required"
                                        ],
                                        "rating": [
                                            "Rating is required",
                                            "Rating must be between 1 and 5"
                                        ],
                                        "comment": ["Comment is required"]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Product not found"]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Internal server error"]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/carts": {
            "get": {
                "summary": "Get all products in cart",
                "tags": ["Authenticated", "Cart"],
                "responses": {
                    "200": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessWithPaginationResponse"
                                },
                                "example": {
                                    "message": "Cart fetched successfully",
                                    "data": [
                                        {
                                            "id": 1,
                                            "product_image": {
                                                "product_id": 1,
                                                "name": "https://example.com/image1.jpg"
                                            },
                                            "name": "Product 1",
                                            "price": 100,
                                            "discount": 0.1,
                                            "quantity": 2,
                                            "discounted_price": 90,
                                            "sale_id": 1,
                                            "sale": {
                                                "id": 1,
                                                "sale_discount": "20.00"
                                            }
                                        },
                                        {
                                            "id": 2,
                                            "product_image": {
                                                "product_id": 2,
                                                "name": "https://example.com/image2.jpg"
                                            },
                                            "name": "Product 2",
                                            "price": 200,
                                            "discount": 0.15,
                                            "quantity": 1,
                                            "discounted_price": 170,
                                            "sale_id": null,
                                            "sale": null
                                        }
                                    ],
                                    "pagination": {
                                        "current_page": 1,
                                        "total_pages": 1,
                                        "total_items": 2,
                                        "items_per_page": 15
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Field error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "user_id": ["User ID is required"]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Cart not found"]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Internal server error"]
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Add product to cart",
                "tags": ["Authenticated", "Cart", "Product Details"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "product_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "required": ["product_id", "quantity"]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessMessageResponse"
                                },
                                "example": {
                                    "message": "Product added to cart successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Field error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "product_id": [
                                            "Product ID is required"
                                        ],
                                        "quantity": ["Quantity is required"]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Product not found"]
                                    }
                                }
                            }
                        }
                    },

                    "500": {
                        "description": "internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Internal server error"]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/carts/{id}": {
            "delete": {
                "summary": "Remove product from cart",
                "tags": ["Authenticated", "Cart", "Product Details"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Cart ID",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessMessageResponse"
                                },
                                "example": {
                                    "message": "Product removed from cart successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Field error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "id": ["Cart ID is required"]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Product not found in cart"]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Internal server error"]
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update product in cart",
                "tags": ["Authenticated", "Cart", "Product Details"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Cart ID",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "product_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "required": ["product_id", "quantity"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessMessageResponse"
                                },
                                "example": {
                                    "message": "Product updated in cart successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Field error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "product_id": [
                                            "Product ID is required"
                                        ],
                                        "quantity": ["Quantity is required"]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Product not found in cart"]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Internal server error"]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orders": {
            "post": {
                "summary": "Create order",
                "tags": ["Authenticated", "Orders"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "product_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [1, 2, 3]
                                    },
                                    "quantities": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [2, 1, 3]
                                    },
                                    "coupon_discount": {
                                        "type": "number",
                                        "example": 0.1,
                                        "description": "Coupon discount as decimal (0.1 = 10%)"
                                    },
                                    "full_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123, Street, City, State, Country"
                                    },
                                    "detail_address": {
                                        "type": "string",
                                        "example": "Near the mall, 2nd floor",
                                        "nullable": true
                                    },
                                    "province": {
                                        "type": "string",
                                        "example": "Province"
                                    },
                                    "district": {
                                        "type": "string",
                                        "example": "District"
                                    },
                                    "sub_district": {
                                        "type": "string",
                                        "example": "Sub District"
                                    },
                                    "village": {
                                        "type": "string",
                                        "example": "Village"
                                    },
                                    "postal_code": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "payment_method": {
                                        "type": "string",
                                        "example": "cash",
                                        "enum": [
                                            "cash",
                                            "credit_card",
                                            "bank_transfer"
                                        ]
                                    },
                                    "total_price": {
                                        "type": "number",
                                        "example": 150000
                                    }
                                },
                                "required": [
                                    "product_ids",
                                    "quantities",
                                    "total_price",
                                    "full_name",
                                    "phone_number",
                                    "address",
                                    "province",
                                    "district",
                                    "sub_district",
                                    "village",
                                    "postal_code",
                                    "payment_method"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessMessageResponse"
                                },
                                "example": {
                                    "message": "Order created successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Field error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "user_id": ["User ID is required"],
                                        "products": ["Products are required"]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Product not found"]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Internal server error"]
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get all orders of authenticated user",
                "tags": ["Authenticated", "Orders"],
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "description": "Order status filter: 0 = pending/process, 1 = shipped/deliveries, 2 = delivered",
                        "schema": {
                            "type": "integer",
                            "example": 1,
                            "enum": [0, 1, 2]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessWithPaginationResponse"
                                },
                                "example": {
                                    "message": "Orders fetched successfully",
                                    "data": [
                                        {
                                            "id": 1,
                                            "tracking_message": "Order placed",
                                            "created_at": "2025-10-20T10:30:00.000000Z",
                                            "status": 0,
                                            "total_price": 150000,
                                            "coupon_discount": 0.1,
                                            "payment_method": "cash",
                                            "order_details": [
                                                {
                                                    "id": 1,
                                                    "quantity": 2,
                                                    "total_price": 100000,
                                                    "product": {
                                                        "id": 1,
                                                        "name": "Product 1",
                                                        "price": 50000,
                                                        "discount": 0.1,
                                                        "product_images": [
                                                            {
                                                                "product_id": 1,
                                                                "name": "https://example.com/image1.jpg"
                                                            }
                                                        ]
                                                    }
                                                }
                                            ]
                                        }
                                    ],
                                    "pagination": {
                                        "current_page": 1,
                                        "total_pages": 1,
                                        "total_items": 1,
                                        "items_per_page": 15
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Internal server error"]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/coupons/check/{code}": {
            "get": {
                "summary": "Validate coupon code and calculate discount",
                "tags": ["Unauthenticated", "Orders"],
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "description": "Coupon code",
                        "schema": {
                            "type": "string",
                            "example": "DISCOUNT10"
                        }
                    },
                    {
                        "name": "total_price",
                        "in": "query",
                        "required": true,
                        "description": "Total cart price for minimum purchase validation",
                        "schema": {
                            "type": "number",
                            "minimum": 0,
                            "example": 150000
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessWithDataResponse"
                                },
                                "example": {
                                    "message": "Coupon code is valid",
                                    "data": {
                                        "id": 1,
                                        "code": "DISCOUNT10",
                                        "name": "10% Discount",
                                        "type": "percentage",
                                        "value": 10,
                                        "minimum_purchase": 100000,
                                        "discount_amount": 15000,
                                        "final_total": 135000
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Minimum purchase not met or validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "examples": {
                                    "minimum_not_met": {
                                        "value": {
                                            "errors": {
                                                "message": [
                                                    "Minimum purchase of Rp100,000 required"
                                                ]
                                            }
                                        }
                                    },
                                    "validation_error": {
                                        "value": {
                                            "errors": {
                                                "total_price": [
                                                    "Total price is required"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Coupon not found or expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": [
                                            "Coupon code is invalid or expired"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Internal server error"]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/coupons/apply": {
            "post": {
                "summary": "Apply coupon to cart/order",
                "tags": ["Authenticated", "Orders"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "coupon_code": {
                                        "type": "string",
                                        "description": "Coupon code to apply",
                                        "example": "DISCOUNT10"
                                    },
                                    "total_price": {
                                        "type": "number",
                                        "description": "Total cart price",
                                        "minimum": 0,
                                        "example": 150000
                                    },
                                    "cart_items": {
                                        "type": "array",
                                        "description": "Array of cart items",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "product_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "quantity": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "example": 75000
                                                }
                                            }
                                        }
                                    }
                                },
                                "required": [
                                    "coupon_code",
                                    "total_price",
                                    "cart_items"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessWithDataResponse"
                                },
                                "example": {
                                    "message": "Coupon applied successfully",
                                    "data": {
                                        "coupon_id": 1,
                                        "coupon_code": "DISCOUNT10",
                                        "discount_amount": 15000,
                                        "original_total": 150000,
                                        "final_total": 135000,
                                        "usage_id": 123
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Validation error or coupon cannot be applied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "examples": {
                                    "minimum_not_met": {
                                        "value": {
                                            "errors": {
                                                "message": [
                                                    "Minimum purchase of Rp100,000 required"
                                                ]
                                            }
                                        }
                                    },
                                    "usage_limit_exceeded": {
                                        "value": {
                                            "errors": {
                                                "message": [
                                                    "Coupon usage limit exceeded"
                                                ]
                                            }
                                        }
                                    },
                                    "validation_error": {
                                        "value": {
                                            "errors": {
                                                "coupon_code": [
                                                    "Coupon code is required"
                                                ],
                                                "total_price": [
                                                    "Total price is required"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Coupon not found or expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": [
                                            "Coupon code is invalid or expired"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Internal server error"]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "summary": "Get user profile",
                "tags": ["Authenticated", "Profile"],
                "responses": {
                    "200": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessWithDataResponse"
                                },
                                "example": {
                                    "message": "Profile fetched successfully",
                                    "data": {
                                        "id": 1,
                                        "name": "User 1",
                                        "email": "email@mail.com",
                                        "phone": "1234567890"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Profile not found"]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Internal server error"]
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update user profile",
                "tags": ["Authenticated", "Profile"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "User 1"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": " [email protected]"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "1234567890"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessMessageResponse"
                                },
                                "example": {
                                    "message": "Profile updated successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Field error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "name": ["Name is required"],
                                        "email": ["Email is required"],
                                        "phone": ["Phone is required"]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Profile not found"]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Internal server error"]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/addresses": {
            "get": {
                "summary": "Get all addresses of a user",
                "tags": ["Authenticated", "Address"],
                "responses": {
                    "200": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessWithPaginationResponse"
                                },
                                "example": {
                                    "message": "Addresses fetched successfully",
                                    "data": [
                                        {
                                            "id": 1,
                                            "fullname": "User 1",
                                            "phone": "1234567890",
                                            "address": "123, Street, City, State, Country",
                                            "detail": "Nearby landmark",
                                            "province": "Province",
                                            "district": "District",
                                            "sub_district": "Sub District",
                                            "village": "Village",
                                            "postal_code": "12345",
                                            "pinned": 1
                                        },
                                        {
                                            "id": 2,
                                            "fullname": "User 2",
                                            "phone": "1234567890",
                                            "address": "123, Street, City, State, Country",
                                            "detail": "Nearby landmark",
                                            "province": "Province",
                                            "district": "District",
                                            "sub_district": "Sub District",
                                            "village": "Village",
                                            "postal_code": "12345",
                                            "pinned": 0
                                        },
                                        {
                                            "id": 3,
                                            "fullname": "User 3",
                                            "phone": "1234567890",
                                            "address": "123, Street, City, State, Country",
                                            "detail": "Nearby landmark",
                                            "province": "Province",
                                            "district": "District",
                                            "sub_district": "Sub District",
                                            "village": "Village",
                                            "postal_code": "12345",
                                            "pinned": 0
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Field error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "user_id": ["User ID is required"]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Addresses not found"]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Internal server error"]
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Add address to user",
                "tags": ["Authenticated", "Address"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "fullname": {
                                        "type": "string",
                                        "example": "User 1"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123, Street, City, State, Country"
                                    },
                                    "detail": {
                                        "type": "string",
                                        "example": "Nearby landmark"
                                    },
                                    "province": {
                                        "type": "string",
                                        "example": "Province"
                                    },
                                    "district": {
                                        "type": "string",
                                        "example": "District"
                                    },
                                    "sub_district": {
                                        "type": "string",
                                        "example": "Sub District"
                                    },
                                    "village": {
                                        "type": "string",
                                        "example": "Village"
                                    },
                                    "postal_code": {
                                        "type": "string",
                                        "example": "12345"
                                    },
                                    "pinned": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "required": [
                                    "fullname",
                                    "phone",
                                    "address",
                                    "province",
                                    "district",
                                    "sub_district",
                                    "village",
                                    "postal_code"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessMessageResponse"
                                },
                                "example": {
                                    "message": "Address added successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Field error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "fullname": ["Fullname is required"],
                                        "phone": ["Phone is required"],
                                        "address": ["Address is required"],
                                        "province": ["Province is required"],
                                        "district": ["District is required"],
                                        "sub_district": [
                                            "Sub District is required"
                                        ],
                                        "village": ["Village is required"],
                                        "postal_code": [
                                            "Postal code is required"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["User not found"]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Internal server error"]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/addresses/pinned": {
            "get": {
                "summary": "Get pinned address of a user",
                "tags": ["Authenticated", "Address"],
                "responses": {
                    "200": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessWithDataResponse"
                                },
                                "example": {
                                    "message": "Pinned address fetched successfully",
                                    "data": {
                                        "id": 1,
                                        "fullname": "User 1",
                                        "phone": "1234567890",
                                        "address": "123, Street, City, State, Country",
                                        "detail": "Nearby landmark",
                                        "province": "Province",
                                        "district": "District",
                                        "sub_district": "Sub District",
                                        "village": "Village",
                                        "postal_code": "12345"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Field error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "user_id": ["User ID is required"]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Pinned address not found"]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Internal server error"]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/addresses/{id}": {
            "delete": {
                "summary": "Remove address from user",
                "tags": ["Authenticated", "Address"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Address ID",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessMessageResponse"
                                },
                                "example": {
                                    "message": "Address removed successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Field error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "id": ["Address ID is required"]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Address not found"]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Internal server error"]
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update address of a user",
                "tags": ["Authenticated", "Address"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Address ID",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "fullname": {
                                        "type": "string",
                                        "example": "User 1"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123, Street, City, State, Country"
                                    },
                                    "detail": {
                                        "type": "string",
                                        "example": "Nearby landmark"
                                    },
                                    "province": {
                                        "type": "string",
                                        "example": "Province"
                                    },
                                    "district": {
                                        "type": "string",
                                        "example": "District"
                                    },
                                    "sub_district": {
                                        "type": "string",
                                        "example": "Sub District"
                                    },
                                    "postal_code": {
                                        "type": "string",
                                        "example": "12345"
                                    },
                                    "village": {
                                        "type": "string",
                                        "example": "Village"
                                    },
                                    "pinned": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "required": [
                                    "fullname",
                                    "phone",
                                    "address",
                                    "province",
                                    "district",
                                    "sub_district",
                                    "village",
                                    "postal_code"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessMessageResponse"
                                },
                                "example": {
                                    "message": "Address updated successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Field error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "fullname": ["Fullname is required"],
                                        "phone": ["Phone is required"],
                                        "address": ["Address is required"],
                                        "province": ["Province is required"],
                                        "district": ["District is required"],
                                        "sub_district": [
                                            "Sub District is required"
                                        ],
                                        "postal_code": [
                                            "Postal code is required"
                                        ],
                                        "village": ["Village is required"]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Address not found"]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Internal server error"]
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get address of a user",
                "tags": ["Authenticated", "Address"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Address ID",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessWithDataResponse"
                                },
                                "example": {
                                    "message": "Address fetched successfully",
                                    "data": {
                                        "id": 1,
                                        "fullname": "User 1",
                                        "phone": "1234567890",
                                        "address": "123, Street, City, State, Country",
                                        "detail": "Nearby landmark",
                                        "province": "Province",
                                        "district": "District",
                                        "sub_district": "Sub District",
                                        "village": "Village",
                                        "postal_code": "12345"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Field error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "id": ["Address ID is required"]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Address not found"]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Internal server error"]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/provinces": {
            "get": {
                "summary": "Get all provinces",
                "tags": ["Master Data"],
                "responses": {
                    "200": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessWithPaginationResponse"
                                },
                                "example": {
                                    "message": "Provinces fetched successfully",
                                    "data": [
                                        {
                                            "id": 1,
                                            "name": "Province 1"
                                        },
                                        {
                                            "id": 2,
                                            "name": "Province 2"
                                        },
                                        {
                                            "id": 3,
                                            "name": "Province 3"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Internal server error"]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/districts/{province_id}": {
            "get": {
                "summary": "Get all districts of a province",
                "tags": ["Master Data"],
                "parameters": [
                    {
                        "name": "province_id",
                        "in": "path",
                        "required": true,
                        "description": "Province ID",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessWithPaginationResponse"
                                },
                                "example": {
                                    "message": "Districts fetched successfully",
                                    "data": [
                                        {
                                            "id": 1,
                                            "name": "District 1"
                                        },
                                        {
                                            "id": 2,
                                            "name": "District 2"
                                        },
                                        {
                                            "id": 3,
                                            "name": "District 3"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Field error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "province_id": [
                                            "Province ID is required"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Internal server error"]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sub-districts/{district_id}": {
            "get": {
                "summary": "Get all sub districts of a district",
                "tags": ["Master Data"],
                "parameters": [
                    {
                        "name": "district_id",
                        "in": "path",
                        "required": true,
                        "description": "District ID",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessWithPaginationResponse"
                                },
                                "example": {
                                    "message": "Sub Districts fetched successfully",
                                    "data": [
                                        {
                                            "id": 1,
                                            "name": "Sub District 1"
                                        },
                                        {
                                            "id": 2,
                                            "name": "Sub District 2"
                                        },
                                        {
                                            "id": 3,
                                            "name": "Sub District 3"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Field error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "district_id": [
                                            "District ID is required"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Internal server error"]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/villages/{sub_district_id}": {
            "get": {
                "summary": "Get all villages of a sub district",
                "tags": ["Master Data"],
                "parameters": [
                    {
                        "name": "sub_district_id",
                        "in": "path",
                        "required": true,
                        "description": "Sub District ID",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessWithPaginationResponse"
                                },
                                "example": {
                                    "message": "Villages fetched successfully",
                                    "data": [
                                        {
                                            "id": 1,
                                            "name": "Village 1"
                                        },
                                        {
                                            "id": 2,
                                            "name": "Village 2"
                                        },
                                        {
                                            "id": 3,
                                            "name": "Village 3"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Field error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "sub_district_id": [
                                            "Sub District ID is required"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Internal server error"]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "summary": "Get all categories",
                "tags": ["Master Data"],
                "responses": {
                    "200": {
                        "description": "Success with data response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessWithDataResponse"
                                },
                                "example": {
                                    "message": "Categories retrieved successfully",
                                    "data": [
                                        {
                                            "id": 1,
                                            "name": "Phones",
                                            "icon": "Phone"
                                        },
                                        {
                                            "id": 2,
                                            "name": "Computers",
                                            "icon": "Laptop"
                                        },
                                        {
                                            "id": 3,
                                            "name": "SmartWatch",
                                            "icon": "Watch"
                                        },
                                        {
                                            "id": 4,
                                            "name": "Camera",
                                            "icon": "Camera"
                                        },
                                        {
                                            "id": 5,
                                            "name": "HeadPhones",
                                            "icon": "Headset"
                                        },
                                        {
                                            "id": 6,
                                            "name": "Gaming",
                                            "icon": "Joystick"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "errors": {
                                        "message": ["Internal server error"]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "cookieAuth": {
                "type": "apiKey",
                "in": "cookie",
                "name": "tokenjwt",
                "description": "JWT token stored in an httpOnly cookie (production use)"
            }
        },
        "schemas": {
            "SuccessMessageResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                }
            },
            "SuccessWithDataResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object"
                    }
                }
            },
            "SuccessWithPaginationResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "pagination": {
                        "type": "object",
                        "properties": {
                            "current_page": {
                                "type": "integer"
                            },
                            "total_pages": {
                                "type": "integer"
                            },
                            "total_items": {
                                "type": "integer"
                            },
                            "items_per_page": {
                                "type": "integer"
                            }
                        }
                    }
                }
            },
            "FieldErrorResponse": {
                "type": "object",
                "properties": {
                    "errors": {
                        "type": "object",
                        "properties": {
                            "field1": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "field2": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "field3": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "ApiErrorResponse": {
                "type": "object",
                "properties": {
                    "errors": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
